{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  mutation QuestionCreate($data: QuestionCreateInput!) {\\n    questionCreate(data: $data) {\\n      id\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import TagsInput from'react-tagsinput';import gql from'graphql-tag';import{graphql}from'react-apollo';//import { FileInput } from '@8base-react/file-input';\nimport{toast}from'react-toastify';import'react-tagsinput/react-tagsinput.css';import'./form.css';var QUESTION_CREATE_MUTATION=gql(_templateObject());var QuestionForm=function QuestionForm(_ref){var closeModal=_ref.closeModal,questionCreate=_ref.questionCreate;var _useState=useState({options:[],question:'',image:{},answer:''}),_useState2=_slicedToArray(_useState,2),questionForm=_useState2[0],setQuestion=_useState2[1];var inputProps={placeholder:'Add an option and press enter',className:'question-input'};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return questionCreate({variables:{data:questionForm}});case 3:closeModal();toast('Your question has been created successfully');case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleInputChange=function handleInputChange(event){event.preventDefault();var _event$target=event.target,name=_event$target.name,value=_event$target.value;setQuestion(_objectSpread(_objectSpread({},questionForm),{},_defineProperty({},name,value)));};var handleTagsChange=function handleTagsChange(options){setQuestion(_objectSpread(_objectSpread({},questionForm),{},{options:options}));};return/*#__PURE__*/React.createElement(\"form\",{action:\"\",id:\"question-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"question\",placeholder:\"Enter your covid 19 related question....\",onChange:handleInputChange,value:questionForm.question,className:\"question-input\"}),/*#__PURE__*/React.createElement(TagsInput,{value:questionForm.options,onChange:handleTagsChange,maxTags:4,inputProps:inputProps}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Add the answer to the question...\",value:questionForm.answer,onChange:handleInputChange,className:\"question-input\",name:\"answer\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-area\"},/*#__PURE__*/React.createElement(\"button\",{className:\"submit-button\",type:\"submit\"},\"Create Question\")));};export default graphql(QUESTION_CREATE_MUTATION,{name:'questionCreate'})(QuestionForm);","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/rdgcovidquiz/RDGcovidquiz/src/components/question-form/index.js"],"names":["React","useState","TagsInput","gql","graphql","toast","QUESTION_CREATE_MUTATION","QuestionForm","closeModal","questionCreate","options","question","image","answer","questionForm","setQuestion","inputProps","placeholder","className","handleSubmit","e","preventDefault","variables","data","handleInputChange","event","target","name","value","handleTagsChange"],"mappings":"s2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,OAASC,OAAT,KAAwB,cAAxB,CACA;AACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,MAAO,qCAAP,CACA,MAAO,YAAP,CAEA,GAAMC,CAAAA,wBAAwB,CAAGH,GAAH,mBAA9B,CAQA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAoC,IAAjCC,CAAAA,UAAiC,MAAjCA,UAAiC,CAArBC,cAAqB,MAArBA,cAAqB,eACnBR,QAAQ,CAAC,CAC3CS,OAAO,CAAE,EADkC,CAE3CC,QAAQ,CAAE,EAFiC,CAG3CC,KAAK,CAAE,EAHoC,CAI3CC,MAAM,CAAE,EAJmC,CAAD,CADW,wCAChDC,YADgD,eAClCC,WADkC,eAOvD,GAAMC,CAAAA,UAAU,CAAG,CACjBC,WAAW,CAAE,+BADI,CAEjBC,SAAS,CAAE,gBAFM,CAAnB,CAKA,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,CAAP,kHACnBA,CAAC,CAACC,cAAF,GADmB,sBAEbZ,CAAAA,cAAc,CAAC,CAAEa,SAAS,CAAE,CAAEC,IAAI,CAAET,YAAR,CAAb,CAAD,CAFD,QAGnBN,UAAU,GACVH,KAAK,CAAC,6CAAD,CAAL,CAJmB,sDAAH,kBAAZc,CAAAA,YAAY,6CAAlB,CAOA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnCA,KAAK,CAACJ,cAAN,GADmC,kBAI/BI,KAJ+B,CAGjCC,MAHiC,CAGvBC,IAHuB,eAGvBA,IAHuB,CAGjBC,KAHiB,eAGjBA,KAHiB,CAMnCb,WAAW,gCACND,YADM,wBAERa,IAFQ,CAEDC,KAFC,GAAX,CAID,CAVD,CAYA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnB,OAAD,CAAa,CACpCK,WAAW,gCACND,YADM,MAETJ,OAAO,CAAPA,OAFS,GAAX,CAID,CALD,CASE,mBACA,4BAAM,MAAM,CAAC,EAAb,CAAgB,EAAE,CAAC,eAAnB,CAAmC,QAAQ,CAAES,YAA7C,eACE,6BACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,0CAHd,CAIE,QAAQ,CAAEK,iBAJZ,CAKE,KAAK,CAAEV,YAAY,CAACH,QALtB,CAME,SAAS,CAAC,gBANZ,EADF,cASE,oBAAC,SAAD,EACE,KAAK,CAAEG,YAAY,CAACJ,OADtB,CAEE,QAAQ,CAAEmB,gBAFZ,CAGE,OAAO,CAAE,CAHX,CAIE,UAAU,CAAEb,UAJd,EATF,cAeE,6BACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,mCAFd,CAGE,KAAK,CAAEF,YAAY,CAACD,MAHtB,CAIE,QAAQ,CAAEW,iBAJZ,CAKE,SAAS,CAAC,gBALZ,CAME,IAAI,CAAC,QANP,EAfF,cAyBE,2BAAK,SAAS,CAAC,aAAf,eACE,8BAAQ,SAAS,CAAC,eAAlB,CAAkC,IAAI,CAAC,QAAvC,oBADF,CAzBF,CADA,CAiCH,CAzED,CA2EA,cAAepB,CAAAA,OAAO,CAACE,wBAAD,CAA2B,CAC/CqB,IAAI,CAAE,gBADyC,CAA3B,CAAP,CAEZpB,YAFY,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport TagsInput from 'react-tagsinput';\r\nimport gql from 'graphql-tag';\r\nimport { graphql } from 'react-apollo';\r\n//import { FileInput } from '@8base-react/file-input';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport './form.css';\r\n\r\nconst QUESTION_CREATE_MUTATION = gql`\r\n  mutation QuestionCreate($data: QuestionCreateInput!) {\r\n    questionCreate(data: $data) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuestionForm = ({ closeModal, questionCreate }) => {\r\n  const [questionForm, setQuestion] = useState({\r\n    options: [],\r\n    question: '',\r\n    image: {},\r\n    answer: '',\r\n  });\r\n  const inputProps = {\r\n    placeholder: 'Add an option and press enter',\r\n    className: 'question-input',\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await questionCreate({ variables: { data: questionForm } });\r\n    closeModal();\r\n    toast('Your question has been created successfully');\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    setQuestion({\r\n      ...questionForm,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleTagsChange = (options) => {\r\n    setQuestion({\r\n      ...questionForm,\r\n      options,\r\n    });\r\n  };\r\n\r\n  \r\n\r\n    return (\r\n    <form action=\"\" id=\"question-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"question\"\r\n        placeholder=\"Enter your covid 19 related question....\"\r\n        onChange={handleInputChange}\r\n        value={questionForm.question}\r\n        className=\"question-input\"\r\n      />\r\n      <TagsInput\r\n        value={questionForm.options}\r\n        onChange={handleTagsChange}\r\n        maxTags={4}\r\n        inputProps={inputProps}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add the answer to the question...\"\r\n        value={questionForm.answer}\r\n        onChange={handleInputChange}\r\n        className=\"question-input\"\r\n        name=\"answer\"\r\n      />\r\n    \r\n\r\n      <div className=\"submit-area\">\r\n        <button className=\"submit-button\" type=\"submit\">\r\n          Create Question\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default graphql(QUESTION_CREATE_MUTATION, {\r\n  name: 'questionCreate',\r\n})(QuestionForm);\r\n"]},"metadata":{},"sourceType":"module"}