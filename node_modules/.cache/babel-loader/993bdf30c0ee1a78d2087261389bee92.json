{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\src\\\\components\\\\question\\\\index.js\";\nimport React, { useState } from \"react\";\nimport \"./question.css\";\n\nconst Question = ({\n  question,\n  onNextClicked\n}) => {\n  const [answered, setAnswered] = useState(false);\n  const [selectedOption, setSelectedOption] = useState({});\n\n  const onOptionClicked = option => {\n    setAnswered(true);\n    setSelectedOption(option);\n  };\n\n  const isCorrect = option => {\n    return option === question.answer;\n  };\n\n  const resetQuestion = () => {\n    setAnswered(false);\n    setSelectedOption({});\n    onNextClicked(selectedOption);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-image-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"question-image\",\n    src: question.image ? question.image.downloadUrl : '',\n    alt: question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, answered && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, question.question)), question.options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      onClick: () => onOptionClicked(option),\n      disabled: answered && !isCorrect(option),\n      className: `question-option ${answered && isCorrect(option) && \"correct\"}\n              ${selectedOption === option && !isCorrect(option) && \"wrong\"}\n              `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, answered ? isCorrect(option) ? \"✔\" : \"X\" : index + 1), option);\n  })));\n};\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/rdgcovidquiz/RDGcovidquiz/src/components/question/index.js"],"names":["React","useState","Question","question","onNextClicked","answered","setAnswered","selectedOption","setSelectedOption","onOptionClicked","option","isCorrect","answer","resetQuestion","image","downloadUrl","options","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAiC;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMQ,eAAe,GAAGC,MAAM,IAAI;AAChCJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,iBAAiB,CAACE,MAAD,CAAjB;AACD,GAHD;;AAKA,QAAMC,SAAS,GAAGD,MAAM,IAAI;AAC1B,WAAOA,MAAM,KAAKP,QAAQ,CAACS,MAA3B;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAJ,IAAAA,aAAa,CAACG,cAAD,CAAb;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,EAAEJ,QAAQ,CAACW,KAAT,GAAiBX,QAAQ,CAACW,KAAT,CAAeC,WAAhC,GAA8C,EAAnF;AAAuF,IAAA,GAAG,EAAEZ,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,iBAAI;AAAQ,IAAA,OAAO,EAAEQ,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,eAEE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BV,QAAQ,CAACA,QAAxC,CAFF,CADF,EAMGA,QAAQ,CAACa,OAAT,CAAiBC,GAAjB,CAAqB,CAACP,MAAD,EAASQ,KAAT,KAAmB;AACvC,wBACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAE,MAAMT,eAAe,CAACC,MAAD,CAFhC;AAGE,MAAA,QAAQ,EAAEL,QAAQ,IAAI,CAACM,SAAS,CAACD,MAAD,CAHlC;AAIE,MAAA,SAAS,EAAG,mBAAkBL,QAAQ,IACpCM,SAAS,CAACD,MAAD,CADmB,IAE5B,SAAU;gBACVH,cAAc,KAAKG,MAAnB,IACA,CAACC,SAAS,CAACD,MAAD,CADV,IAEA,OAAQ;eATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,GAAIM,SAAS,CAACD,MAAD,CAAT,GAAoB,GAApB,GAA0B,GAA9B,GAAsCQ,KAAK,GAAC,CADvD,CAZF,EAeGR,MAfH,CADF;AAmBD,GApBA,CANH,CAJF,CADF;AAmCD,CAtDD;;AAwDA,eAAeR,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./question.css\";\r\n\r\nconst Question = ({ question, onNextClicked }) => {\r\n  const [answered, setAnswered] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState({});\r\n\r\n  const onOptionClicked = option => {\r\n    setAnswered(true);\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const isCorrect = option => {\r\n    return option === question.answer;\r\n  };\r\n\r\n  const resetQuestion = () => {\r\n    setAnswered(false);\r\n    setSelectedOption({});\r\n    onNextClicked(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-image-holder\">\r\n        <img className=\"question-image\" src={question.image ? question.image.downloadUrl : ''} alt={question} />\r\n      </div>\r\n      <section>\r\n        <div className=\"question-text-holder\">\r\n          {answered && <button onClick={resetQuestion}>Next</button>}\r\n          <h4 className=\"question-text\">{question.question}</h4>\r\n        </div>\r\n\r\n        {question.options.map((option, index) => {\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => onOptionClicked(option)}\r\n              disabled={answered && !isCorrect(option)}\r\n              className={`question-option ${answered &&\r\n                isCorrect(option) &&\r\n                \"correct\"}\r\n              ${selectedOption === option &&\r\n                !isCorrect(option) &&\r\n                \"wrong\"}\r\n              `}\r\n            >\r\n              <span>\r\n                {answered ? (isCorrect(option) ? \"✔\" : \"X\") : (index+1)}\r\n              </span>\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}