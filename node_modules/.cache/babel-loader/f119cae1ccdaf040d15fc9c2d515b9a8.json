{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\src\\\\components\\\\question-form\\\\index.js\";\nimport React, { useState } from 'react';\nimport TagsInput from 'react-tagsinput';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo'; //import { FileInput } from '@8base/file-input';\n\nimport { toast } from 'react-toastify';\nimport 'react-tagsinput/react-tagsinput.css';\nimport './form.css';\nconst QUESTION_CREATE_MUTATION = gql`\n  mutation QuestionCreate($data: QuestionCreateInput!) {\n    questionCreate(data: $data) {\n      id\n    }\n  }\n`;\n\nconst QuestionForm = ({\n  closeModal,\n  questionCreate\n}) => {\n  const [questionForm, setQuestion] = useState({\n    options: [],\n    question: '',\n    image: {},\n    answer: ''\n  });\n  const inputProps = {\n    placeholder: 'Add an option and press enter',\n    className: 'question-input'\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await questionCreate({\n      variables: {\n        data: questionForm\n      }\n    });\n    closeModal();\n    toast('Your question has been created successfully');\n  };\n\n  const handleInputChange = event => {\n    event.preventDefault();\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    setQuestion({ ...questionForm,\n      [name]: value\n    });\n  };\n\n  const handleTagsChange = options => {\n    setQuestion({ ...questionForm,\n      options\n    });\n  };\n\n  const handleImageChange = value => {\n    console.log(value);\n    setQuestion({ ...questionForm,\n      image: {\n        create: value\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    id: \"question-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"question\",\n    placeholder: \"Enter your covid 19 npm related question....\",\n    onChange: handleInputChange,\n    value: questionForm.question,\n    className: \"question-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TagsInput, {\n    value: questionForm.options,\n    onChange: handleTagsChange,\n    maxTags: 4,\n    inputProps: inputProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add the answer to the question...\",\n    value: questionForm.answer,\n    onChange: handleInputChange,\n    className: \"question-input\",\n    name: \"answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Create Question\")));\n};\n\nexport default graphql(QUESTION_CREATE_MUTATION, {\n  name: 'questionCreate'\n})(QuestionForm);","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/rdgcovidquiz/RDGcovidquiz/src/components/question-form/index.js"],"names":["React","useState","TagsInput","gql","graphql","toast","QUESTION_CREATE_MUTATION","QuestionForm","closeModal","questionCreate","questionForm","setQuestion","options","question","image","answer","inputProps","placeholder","className","handleSubmit","e","preventDefault","variables","data","handleInputChange","event","target","name","value","handleTagsChange","handleImageChange","console","log","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport TagsInput from 'react-tagsinput';\r\nimport gql from 'graphql-tag';\r\nimport { graphql } from 'react-apollo';\r\n//import { FileInput } from '@8base/file-input';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport './form.css';\r\n\r\nconst QUESTION_CREATE_MUTATION = gql`\r\n  mutation QuestionCreate($data: QuestionCreateInput!) {\r\n    questionCreate(data: $data) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuestionForm = ({ closeModal, questionCreate }) => {\r\n  const [questionForm, setQuestion] = useState({\r\n    options: [],\r\n    question: '',\r\n    image: {},\r\n    answer: '',\r\n  });\r\n  const inputProps = {\r\n    placeholder: 'Add an option and press enter',\r\n    className: 'question-input',\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await questionCreate({ variables: { data: questionForm } });\r\n    closeModal();\r\n    toast('Your question has been created successfully');\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n\r\n    setQuestion({\r\n      ...questionForm,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleTagsChange = (options) => {\r\n    setQuestion({\r\n      ...questionForm,\r\n      options,\r\n    });\r\n  };\r\n\r\n  const handleImageChange = (value) => {\r\n    console.log(value);\r\n    setQuestion({\r\n      ...questionForm,\r\n      image: { create: value },\r\n    });\r\n  };\r\n\r\n    return (\r\n    <form action=\"\" id=\"question-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"question\"\r\n        placeholder=\"Enter your covid 19 npm related question....\"\r\n        onChange={handleInputChange}\r\n        value={questionForm.question}\r\n        className=\"question-input\"\r\n      />\r\n      <TagsInput\r\n        value={questionForm.options}\r\n        onChange={handleTagsChange}\r\n        maxTags={4}\r\n        inputProps={inputProps}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add the answer to the question...\"\r\n        value={questionForm.answer}\r\n        onChange={handleInputChange}\r\n        className=\"question-input\"\r\n        name=\"answer\"\r\n      />\r\n    \r\n\r\n      <div className=\"submit-area\">\r\n        <button className=\"submit-button\" type=\"submit\">\r\n          Create Question\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default graphql(QUESTION_CREATE_MUTATION, {\r\n  name: 'questionCreate',\r\n})(QuestionForm);\r\n"]},"metadata":{},"sourceType":"module"}