{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\HP\\\\Dev\\\\react\\\\ticgame\\\\rdgcovidquiz\\\\RDGcovidquiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"./question.css\";var Question=function Question(_ref){var question=_ref.question,onNextClicked=_ref.onNextClicked;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),answered=_useState2[0],setAnswered=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),selectedOption=_useState4[0],setSelectedOption=_useState4[1];var onOptionClicked=function onOptionClicked(option){setAnswered(true);setSelectedOption(option);};var isCorrect=function isCorrect(option){return option===question.answer;};var resetQuestion=function resetQuestion(){setAnswered(false);setSelectedOption({});onNextClicked(selectedOption);};return/*#__PURE__*/React.createElement(\"div\",{className:\"question\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-image-holder\"},/*#__PURE__*/React.createElement(\"img\",{className:\"question-image\",src:question.image?question.image.downloadUrl:'',alt:question})),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-text-holder\"},answered&&/*#__PURE__*/React.createElement(\"button\",{onClick:resetQuestion},\"Next\"),/*#__PURE__*/React.createElement(\"h4\",{className:\"question-text\"},question.question)),question.options.map(function(option,index){return/*#__PURE__*/React.createElement(\"button\",{key:index,onClick:function onClick(){return onOptionClicked(option);},disabled:answered&&!isCorrect(option),className:\"question-option \".concat(answered&&isCorrect(option)&&\"correct\",\"\\n              \").concat(selectedOption===option&&!isCorrect(option)&&\"wrong\",\"\\n              \")},/*#__PURE__*/React.createElement(\"span\",null,answered?isCorrect(option)?\"✔\":\"X\":index+1),option);})));};export default Question;","map":{"version":3,"sources":["C:/Users/HP/Dev/react/ticgame/rdgcovidquiz/RDGcovidquiz/src/components/question/index.js"],"names":["React","useState","Question","question","onNextClicked","answered","setAnswered","selectedOption","setSelectedOption","onOptionClicked","option","isCorrect","answer","resetQuestion","image","downloadUrl","options","map","index"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,gBAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiC,IAA9BC,CAAAA,QAA8B,MAA9BA,QAA8B,CAApBC,aAAoB,MAApBA,aAAoB,eAChBH,QAAQ,CAAC,KAAD,CADQ,wCACzCI,QADyC,eAC/BC,WAD+B,8BAEJL,QAAQ,CAAC,EAAD,CAFJ,yCAEzCM,cAFyC,eAEzBC,iBAFyB,eAIhD,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,MAAM,CAAI,CAChCJ,WAAW,CAAC,IAAD,CAAX,CACAE,iBAAiB,CAACE,MAAD,CAAjB,CACD,CAHD,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAD,MAAM,CAAI,CAC1B,MAAOA,CAAAA,MAAM,GAAKP,QAAQ,CAACS,MAA3B,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BP,WAAW,CAAC,KAAD,CAAX,CACAE,iBAAiB,CAAC,EAAD,CAAjB,CACAJ,aAAa,CAACG,cAAD,CAAb,CACD,CAJD,CAMA,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,uBAAf,eACE,2BAAK,SAAS,CAAC,gBAAf,CAAgC,GAAG,CAAEJ,QAAQ,CAACW,KAAT,CAAiBX,QAAQ,CAACW,KAAT,CAAeC,WAAhC,CAA8C,EAAnF,CAAuF,GAAG,CAAEZ,QAA5F,EADF,CADF,cAIE,gDACE,2BAAK,SAAS,CAAC,sBAAf,EACGE,QAAQ,eAAI,8BAAQ,OAAO,CAAEQ,aAAjB,SADf,cAEE,0BAAI,SAAS,CAAC,eAAd,EAA+BV,QAAQ,CAACA,QAAxC,CAFF,CADF,CAMGA,QAAQ,CAACa,OAAT,CAAiBC,GAAjB,CAAqB,SAACP,MAAD,CAASQ,KAAT,CAAmB,CACvC,mBACE,8BACE,GAAG,CAAEA,KADP,CAEE,OAAO,CAAE,yBAAMT,CAAAA,eAAe,CAACC,MAAD,CAArB,EAFX,CAGE,QAAQ,CAAEL,QAAQ,EAAI,CAACM,SAAS,CAACD,MAAD,CAHlC,CAIE,SAAS,2BAAqBL,QAAQ,EACpCM,SAAS,CAACD,MAAD,CADmB,EAE5B,SAFO,4BAGPH,cAAc,GAAKG,MAAnB,EACA,CAACC,SAAS,CAACD,MAAD,CADV,EAEA,OALO,oBAJX,eAYE,gCACGL,QAAQ,CAAIM,SAAS,CAACD,MAAD,CAAT,CAAoB,GAApB,CAA0B,GAA9B,CAAsCQ,KAAK,CAAC,CADvD,CAZF,CAeGR,MAfH,CADF,CAmBD,CApBA,CANH,CAJF,CADF,CAmCD,CAtDD,CAwDA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./question.css\";\r\n\r\nconst Question = ({ question, onNextClicked }) => {\r\n  const [answered, setAnswered] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState({});\r\n\r\n  const onOptionClicked = option => {\r\n    setAnswered(true);\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const isCorrect = option => {\r\n    return option === question.answer;\r\n  };\r\n\r\n  const resetQuestion = () => {\r\n    setAnswered(false);\r\n    setSelectedOption({});\r\n    onNextClicked(selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-image-holder\">\r\n        <img className=\"question-image\" src={question.image ? question.image.downloadUrl : ''} alt={question} />\r\n      </div>\r\n      <section>\r\n        <div className=\"question-text-holder\">\r\n          {answered && <button onClick={resetQuestion}>Next</button>}\r\n          <h4 className=\"question-text\">{question.question}</h4>\r\n        </div>\r\n\r\n        {question.options.map((option, index) => {\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => onOptionClicked(option)}\r\n              disabled={answered && !isCorrect(option)}\r\n              className={`question-option ${answered &&\r\n                isCorrect(option) &&\r\n                \"correct\"}\r\n              ${selectedOption === option &&\r\n                !isCorrect(option) &&\r\n                \"wrong\"}\r\n              `}\r\n            >\r\n              <span>\r\n                {answered ? (isCorrect(option) ? \"✔\" : \"X\") : (index+1)}\r\n              </span>\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}